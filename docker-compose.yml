version: '3.5'

services:
  nextapp:
    container_name: nextapp
    build:
      context: .
      dockerfile: client/Dockerfile
    env_file:
      - .env
    volumes:
      - ./client:/app/client
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_KEY=${NEXT_PUBLIC_API_KEY}
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
    ports:
      - 3000:3000
    command: npm run dev
    restart: always


  nestapp:
    container_name: nestapp
    build:
      context: .
      dockerfile: server/Dockerfile
    env_file:
      - server/.development.env
    volumes:
      - ./server:/app/server
    ports:
      - 5000:5000
      - 9229:9229
    command: npm run start:dev
    depends_on:
      - postgres
    restart: always


  postgres:
    container_name: postgres
    image: postgres:12
    env_file:
      - server/.development.env
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata: